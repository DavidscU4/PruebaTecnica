services:
  app:
    build: .
    container_name: prueba_tecnica_app
    ports:
      - "8080:8080"
    environment:
      TZ: America/Guayaquil

      # Modo A) Conectar a Postgres LOCAL (tu host)
      # Windows/Mac: host.docker.internal funciona out-of-the-box.
      # Linux: se usa extra_hosts abajo.
      SPRING_DATASOURCE_URL: jdbc:postgresql://host.docker.internal:5432/banco
      SPRING_DATASOURCE_USERNAME: banco_user
      SPRING_DATASOURCE_PASSWORD: root

      # Modo B) Usar el Postgres del compose (servicio 'db')
      # -> Si vas a usarlo, cambia la URL a:
      # SPRING_DATASOURCE_URL: jdbc:postgresql://db:5432/banco

    extra_hosts:
      - "host.docker.internal:host-gateway"

    restart: unless-stopped

  # Servicio opcional de Postgres (si quieres contenerizar la base)
  db:
    image: postgres:16-alpine
    container_name: banco_db
    environment:
      POSTGRES_DB: banco
      POSTGRES_USER: banco_user
      POSTGRES_PASSWORD: root
      TZ: America/Guayaquil
    volumes:
      - pgdata:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U banco_user -d banco"]
      interval: 10s
      timeout: 3s
      retries: 10
    restart: unless-stopped

volumes:
  pgdata:
